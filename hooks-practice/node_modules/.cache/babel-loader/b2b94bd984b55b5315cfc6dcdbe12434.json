{"ast":null,"code":"export const itemReducer = (currentItems, action) => {\n  switch (action.type) {\n    case 'SET':\n      return action.items;\n\n    case 'ADD':\n      return [...currentItems, action.item];\n\n    case 'DELETE':\n      return currentItems.filter(reminderItem => reminderItem.id !== action.id);\n\n    default:\n      throw new Error('Should not get there!');\n  }\n};","map":{"version":3,"sources":["C:/ReactPractice/hooks-practice/src/reducers/ItemReducer.ts"],"names":["itemReducer","currentItems","action","type","items","item","filter","reminderItem","id","Error"],"mappings":"AAGA,OAAO,MAAMA,WAAW,GAAG,CAACC,YAAD,EAAsBC,MAAtB,KAAqC;AAC5D,UAAQA,MAAM,CAACC,IAAf;AACI,SAAK,KAAL;AACE,aAAOD,MAAM,CAACE,KAAd;;AACF,SAAK,KAAL;AACE,aAAO,CAAC,GAAGH,YAAJ,EAAkBC,MAAM,CAACG,IAAzB,CAAP;;AACF,SAAK,QAAL;AACE,aAAOJ,YAAY,CAACK,MAAb,CAAqBC,YAAD,IAAuBA,YAAY,CAACC,EAAb,KAAoBN,MAAM,CAACM,EAAtE,CAAP;;AACF;AACE,YAAM,IAAIC,KAAJ,CAAU,uBAAV,CAAN;AARN;AAWH,CAZM","sourcesContent":["import { Item } from \"util/type\";\r\n\r\n\r\nexport const itemReducer = (currentItems:Item[], action:any) => {\r\n    switch (action.type) {\r\n        case 'SET':\r\n          return action.items;\r\n        case 'ADD':\r\n          return [...currentItems, action.item];\r\n        case 'DELETE':\r\n          return currentItems.filter((reminderItem:Item) => reminderItem.id !== action.id);\r\n        default:\r\n          throw new Error('Should not get there!');\r\n    }\r\n\r\n}"]},"metadata":{},"sourceType":"module"}